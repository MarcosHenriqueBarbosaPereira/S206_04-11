{
	"info": {
		"_postman_id": "df5f7314-ebbd-4fcc-b3b9-3583e49869d4",
		"name": "Reqres",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39680528"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "Get all",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"total_pages\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has expected keys\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.keys(\"page\", \"per_page\", \"total\", \"total_pages\", \"data\", \"support\");\r",
									"});\r",
									"\r",
									"pm.test(\"Each user has required fields\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    jsonData.data.forEach(user => {\r",
									"        pm.expect(user).to.have.keys(\"id\", \"name\", \"year\", \"color\", \"pantone_value\");\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"ID and Year are numbers\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    jsonData.data.forEach(user => {\r",
									"        pm.expect(user.id).to.be.a(\"number\");\r",
									"        pm.expect(user.year).to.be.a(\"number\");\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}users?page=2",
							"host": [
								"{{URL}}users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POST",
			"item": [
				{
					"name": "Create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has expected keys\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.keys(\"name\", \"job\", \"id\", \"createdAt\");\r",
									"});\r",
									"\r",
									"pm.test(\"ID is a string\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.be.a(\"string\");\r",
									"});\r",
									"\r",
									"pm.test(\"Name and Job match input values\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.equal(\"Chris\");\r",
									"    pm.expect(jsonData.job).to.equal(\"Professor\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Chris\",\r\n    \"job\": \"Professor\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}users",
							"host": [
								"{{URL}}users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register - Successful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has expected keys\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.keys(\"email\", \"password\", \"id\", \"createdAt\");\r",
									"});\r",
									"\r",
									"pm.test(\"ID is a string\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.be.a(\"string\");\r",
									"});\r",
									"\r",
									"pm.test(\"Name and Job match input values\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.email).to.equal(\"marcos_postman_teste@inatel.br\");\r",
									"    pm.expect(jsonData.password).to.equal(\"teste_postman\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"marcos_postman_teste@inatel.br\",\r\n    \"password\": \"teste_postman\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}register",
							"host": [
								"{{URL}}register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PUT",
			"item": [
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has expected keys\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.keys(\"name\", \"job\", \"updatedAt\");\r",
									"});\r",
									"\r",
									"pm.test(\"Name and Job match input values\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.equal(\"Amélia\");\r",
									"    pm.expect(jsonData.job).to.equal(\"cantora\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Amélia\",\r\n    \"job\": \"cantora\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}users/13",
							"host": [
								"{{URL}}users"
							],
							"path": [
								"13"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body is empty\", function () {\r",
									"    pm.expect(pm.response.text()).to.be.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}users/13",
							"host": [
								"{{URL}}users"
							],
							"path": [
								"13"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}